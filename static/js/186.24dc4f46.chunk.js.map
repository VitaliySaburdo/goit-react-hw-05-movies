{"version":3,"file":"static/js/186.24dc4f46.chunk.js","mappings":"mTAEMA,EAAW,gCACXC,EAAU,mCAGHC,EAAkB,mCAAG,WAAMC,GAAN,gFAC1BC,EAD0B,UACjBJ,EADiB,uCACsBC,EADtB,iBACsCE,GADtC,SAETE,EAAAA,EAAAA,IAAUD,GAFD,cAE1BE,EAF0B,yBAGzBA,EAASC,MAHgB,2CAAH,sDAOlBC,EAAc,mCAAG,WAAMC,GAAN,gFACtBL,EADsB,UACbJ,EADa,iBACIS,EADJ,oBACkBR,EADlB,4BAELI,EAAAA,EAAAA,IAAUD,GAFL,cAEtBE,EAFsB,yBAGrBA,EAASC,MAHY,2CAAH,sDAOdG,EAAW,mCAAG,WAAMD,GAAN,gFACnBL,EADmB,UACVJ,EADU,iBACOS,EADP,4BAC6BR,EAD7B,4BAEFI,EAAAA,EAAAA,IAAUD,GAFR,cAEnBE,EAFmB,yBAGlBA,EAASC,MAHS,2CAAH,sDAOXI,EAAc,mCAAG,WAAMF,GAAN,gFACtBL,EADsB,UACbJ,EADa,iBACIS,EADJ,4BAC0BR,EAD1B,4BAELI,EAAAA,EAAAA,IAAUD,GAFL,cAEtBE,EAFsB,yBAGrBA,EAASC,MAHY,2CAAH,sDAOdK,EAAa,mCAAG,WAAOC,EAAOV,GAAd,gFACrBC,EADqB,UACZJ,EADY,gCACoBC,EADpB,kBACqCY,EADrC,iBACmDV,EADnD,4BAEJE,EAAAA,EAAAA,IAAUD,GAFN,cAErBE,EAFqB,yBAGpBA,EAASC,MAHW,2CAAH,uD,+GCO1B,UArCgB,WACd,IAAQE,GAAOK,EAAAA,EAAAA,MAAPL,GACR,GAA4BM,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KAkBA,IAfAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAoB,mCAAG,WAAMV,GAAN,mGAECE,EAAAA,EAAAA,IAAeF,GAFhB,mBAEjBW,EAFiB,EAEjBA,QACRH,EAAUG,GACa,IAAnBA,EAAQC,OAJa,yCAKhB,eALgB,yDAQzBC,QAAQC,IAAR,MARyB,0DAAH,sDAW1BJ,EAAqBV,EACtB,GAAE,CAACA,IAECO,EAEL,OACqB,IAAlBA,EAAOK,QAAgB,qEACvB,0BACC,wBACGL,EAAOQ,KAAI,gBAAGf,EAAH,EAAGA,GAAIgB,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACV,2BACE,qCAAaD,MACb,uBAAIC,MAFGjB,EADC,OASnB,C","sources":["ApiService/ApiService.js","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'ab57a8d74b0df3fdba80a78e42f32d17';\n\n// Запрос популярных фильмов на главную страницу\nexport const fetchTrendingMovie = async page => {\n  const url = `${BASE_URL}trending/movie/week?api_key=${API_KEY}&page=${page}`;\n  const response = await axios.get(url);\n  return response.data;\n};\n\n// Запрос детальной информации по id\nexport const getFilmDetails = async id => {\n  const url = `${BASE_URL}movie/${id}?api_key=${API_KEY}&language=en-US`;\n  const response = await axios.get(url);\n  return response.data;\n};\n\n// Запрос информации о актерах по id\nexport const getFilmCast = async id => {\n  const url = `${BASE_URL}movie/${id}/credits?api_key=${API_KEY}&language=en-US`;\n  const response = await axios.get(url);\n  return response.data;\n};\n\n// Запрос описания по id\nexport const getFilmReviews = async id => {\n  const url = `${BASE_URL}movie/${id}/reviews?api_key=${API_KEY}&language=en-US`;\n  const response = await axios.get(url);\n  return response.data;\n};\n\n// Запрос описания по query\nexport const getFilmSearch = async (query, page) => {\n  const url = `${BASE_URL}search/movie?api_key=${API_KEY}&query=${query}&page=${page}&language=en-US`;\n  const response = await axios.get(url);\n  return response.data;\n};\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getFilmReviews } from '../../ApiService/ApiService';\n\nconst Reviews = () => {\n  const { id } = useParams();\n  const [review, setReview] = useState([]);\n\n\n  useEffect(() => {\n    const APIfetchMovieReviews = async id => {\n      try {\n        const { results } = await getFilmReviews(id);\n        setReview(results);\n        if (results.length === 0) {\n          return 'aslkdjkjadk'\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    APIfetchMovieReviews(id);\n  }, [id]);\n\n  if (!review) return;\n\n  return (\n     review.length === 0 ? (<p>We don't have any reviews for this movie</p>) :\n    (<div>\n      <ul>\n        {review.map(({ id, author, content }) => (\n          <li key={id}>\n            <h3>Author: {author}</h3>\n            <p>{content}</p>\n          </li>\n        ))}\n      </ul>\n    </div>)\n  );\n};\n\nexport  default Reviews"],"names":["BASE_URL","API_KEY","fetchTrendingMovie","page","url","axios","response","data","getFilmDetails","id","getFilmCast","getFilmReviews","getFilmSearch","query","useParams","useState","review","setReview","useEffect","APIfetchMovieReviews","results","length","console","log","map","author","content"],"sourceRoot":""}